#!/bin/sh
# postinst script for pmmc-pte-flashplayer-installer
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule
. /usr/share/pai/functions
. /etc/lsb-release

case "${DISTRIB_CODENAME}" in
    "hardy") 
        GIT_PROTOCOL="git"
        MKTEMP_OPTS="-t"
    ;;

    *)
        GIT_PROTOCOL="https"
        MKTEMP_OPTS="--tmpdir"
    ;;
esac

CACHE_DIR=/var/opt/pmmc/pte/cache
TEMP=`mktemp -d ${MKTEMP_OPTS} pai-unpack-XXXXXX`

exit_with_error() {
    echo "PAI data is NOT installed."
    db_fset pai-installer/httpget seen false
    db_set pai-installer/httpget false
    exit 1
}

download_and_unpack() {
    if [ -d "${CACHE_DIR}" -a -f "${CACHE_DIR}"/${FILENAME} ]
    then
        echo "Installing from local file ${CACHE_DIR}/${FILENAME}"
    else # no local file
        db_get pai-installer/httpget

        if [ "${RET}" != "true" ]
        then
            exit_with_error "download or license refused"
        fi

        pai_download ${CACHE_DIR} || exit_with_error
    fi # end if local file

    pai_unpack ${CACHE_DIR} ${1} || exit_with_error
}

preinstall_data() { 
    DATA_ORIG=${1}/usr/share/PTE-PMMC/pai

    (cd ${DATA_ORIG}/templates/2009/imagens/ajuda_arquivos
    mv Execu*1.jpg "Execucao_do_PAI_1.jpg")

    (cd ${DATA_ORIG}/atividades
    rm -rf 0302HIS001
    mv 1004POR014/1004PORr01409.js 1004POR014/1004POR01409.js)
}

install_data() {
    DATA_ORIG=${1}/usr/share/PTE-PMMC/pai
    DATA_DEST=/opt/pmmc/pte/pai
    oldnames_atividades=atividades-old-names.tmp.txt
    oldnames_templates=templates-old-names.tmp.txt
    oldnames_scripts=scripts-old-names.tmp.txt
    oldnames_xml=xml-old-names.tmp.txt
    count=2

    echo -n "Installing PAI data while fixing filename case/accents... "

    (cd ${DATA_ORIG}
    find atividades -type f -print0 | xargs -n1 -0 echo | grep -iv "thumbs.db" | grep -v "\~") > ${oldnames_atividades}

    (cd ${DATA_ORIG}
    find templates -type f -print0 | xargs -n1 -0 echo | grep -iv "thumbs.db" | grep -v "\~") > ${oldnames_templates}

    (cd ${DATA_ORIG}
    find scripts -type f -print0 | xargs -n1 -0 echo | grep -iv "thumbs.db" | grep -v "\~") > ${oldnames_scripts}

    (cd ${DATA_ORIG}
    find xml -type f -print0 | xargs -n1 -0 echo | grep -iv "thumbs.db" | grep -v "\~") > ${oldnames_xml}

    while read atividades_file
    do
        atividades_newfile=`echo ${atividades_file} | tr "A-Z " "a-z_" | sed -e 's@\([0-9]\{4\}\)cie\([0-9]\{3\}\)@\1CIE\2@g' \
                                                                             -e 's@\([0-9]\{4\}\)geo\([0-9]\{3\}\)@\1GEO\2@g' \
                                                                             -e 's@\([0-9]\{4\}\)his\([0-9]\{3\}\)@\1HIS\2@g' \
                                                                             -e 's@\([0-9]\{4\}\)mat\([0-9]\{3\}\)@\1MAT\2@g' \
                                                                             -e 's@\([0-9]\{4\}\)por\([0-9]\{3\}\)@\1POR\2@g'`
        install -D -m 644 "${DATA_ORIG}/${atividades_file}" "${DATA_DEST}/${atividades_newfile}"
        [ "${atividades_newfile}" != "${atividades_file}" ] && count=$(( count + 1 ))
    done < ${oldnames_atividades}

    while read templates_file
    do
        templates_newfile=`echo ${templates_file} | tr "A-Z " "a-z_"`
        install -D -m 644 "${DATA_ORIG}/${templates_file}" "${DATA_DEST}/${templates_newfile}"
        [ "${templates_newfile}" != "${templates_file}" ] && count=$(( count + 1 ))
    done < ${oldnames_templates}

    while read scripts_file
    do
        scripts_newfile=`echo ${scripts_file} | tr "A-Z " "a-z_"`
        install -D -m 644 "${DATA_ORIG}/${scripts_file}" "${DATA_DEST}/${scripts_newfile}"
        [ "${scripts_newfile}" != "${scripts_file}" ] && count=$(( count + 1 ))
    done < ${oldnames_scripts}


    while read xml_file
    do
        xml_newfile=`echo ${xml_file} | tr "A-Z " "a-z_"`
        install -D -m 644 "${DATA_ORIG}/${xml_file}" "${DATA_DEST}/${xml_newfile}"
        [ "${xml_newfile}" != "${xml_file}" ] && count=$(( count + 1 ))
    done < ${oldnames_xml}

    for file in ajuda.html index.html pai.html
    do
        install -D -m 644 "${DATA_ORIG}/${file}" "${DATA_DEST}/${file}"
    done

    rm -f ${oldnames_atividades} ${oldnames_templates} ${oldnames_scripts} ${oldnames_xml}
    echo "${count} files renamed (except directories)."
    sleep 1
    count=0
}

prepatch_data() {
    DATA_DEST=/opt/pmmc/pte/pai
    PAI_TEMP_DIR=`mktemp -d ${MKTEMP_OPTS} pai-patchset-XXXXXX`
    echo "Fetching patches from GitHub..."
    (cd ${PAI_TEMP_DIR}
    git clone ${GIT_PROTOCOL}://github.com/oiteam/pmmc-pte-pai-patchset.git
    cp -r pmmc-pte-pai-patchset/patches ${DATA_DEST})
    rm -rf ${PAI_TEMP_DIR}
}

patch_data() {
    DATA_DEST=/opt/pmmc/pte/pai
    count=0

    echo -n "Patching HTML files according to new filenames and/or HTML code for accents... "

    (cd ${DATA_DEST}
    for patch_file in patches/*
    do
        patch --quiet -p0 < ${patch_file}
        count=$(( count + 1 ))
    done
    echo "${count} files patched.")

    sleep 1
    count=0
}

#postpatch_data() {
#    DATA_DEST=/opt/pmmc/pte/pai
#    count=0
#
#    (cd ${DATA_DEST}/atividades/0202MAT004
#    mv criancas.gif .__temp__criancas.gif
#    mv crian*as.gif crianças.gif
#    mv .__temp__criancas.gif criancas.gif)
#    count=$(( count + 1 ))
#
#    (cd ${DATA_DEST}/atividades/0203POR003
#    mv viol*o.gif violão.gif
#    mv ta*a.gif taça.gif)
#    count=$(( count + 1 ))
#
#    (cd ${DATA_DEST}/atividades/0403POR003
#    mv 02-lapis.png .__temp__02-lapis.png
#    mv 02-l*pis.png 02-lápis.png
#    mv .__temp__02-lapis.png 02-lapis.png)
#    count=$(( count + 1 ))
#
#    (cd ${DATA_DEST}/atividades/0602POR207
#    mv *gua.jpg égua.jpg)
#    count=$(( count + 1 ))
#
#    (cd ${DATA_DEST}/atividades/1001POR003
#    mv boneca.jpg .__temp__boneca.jpg
#    mv bon*.jpg boné.jpg
#    mv caf*.jpg café.jpg
#    mv c*co.jpg côco.jpg
#    mv .__temp__boneca.jpg boneca.jpg)
#    count=$(( count + 1 ))
#
#    (cd ${DATA_DEST}/atividades/1002POR003
#    mv boneca.jpg .__temp__boneca.jpg
#    mv bon*.jpg boné.jpg
#    mv caf*.jpg café.jpg
#    mv c*co.jpg côco.jpg
#    mv .__temp__boneca.jpg boneca.jpg)
#    count=$(( count + 2 ))
#
#    (cd ${DATA_DEST}/atividades/1001POR004/imagens
#    mv h*lice.jpg hélice.jpg
#    mv *culos.gif óculos.gif)
#    count=$(( count + 1 ))
#
#    (cd ${DATA_DEST}/atividades/1004MAT002/imagens
#    mv doister*os.jpg doisterços.jpg
#    mv umter*o.jpg umterço.jpg
#    mv 1ter*o.jpg 1terço.jpg
#    mv 2ter*os.jpg 2terços.jpg)
#    count=$(( count + 2 ))
#
#    (cd ${DATA_DEST}/atividades/1004MAT003/imagens
#    mv n*meros.png números.png)
#    count=$(( count + 1 ))
#   
#    (cd ${DATA_DEST}/templates/2009/imagens
#    mv pai_*cone.ico pai_ícone.ico)
#    count=$(( count + 1 ))
#
#    echo "After patching, ${count} more files were renamed."
#    sleep 1
#}

case "${1}" in
    configure)
        download_and_unpack ${TEMP}
        preinstall_data ${TEMP} \
            && install_data ${TEMP} \
            && prepatch_data \
            && patch_data \
            && rm -rf ${TEMP} \
            && echo "PAI data installed."
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`${1}'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
