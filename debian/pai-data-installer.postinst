#!/bin/sh
# postinst script for pmmc-pte-flashplayer-installer
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule
. /usr/share/pai/functions
. /etc/lsb-release

case "${DISTRIB_CODENAME}" in
    "hardy") 
        GIT_PROTOCOL="git"
        MKTEMP_OPTS="-t"
    ;;

    *)
        GIT_PROTOCOL="https"
        MKTEMP_OPTS="--tmpdir"
    ;;
esac

CACHE_DIR=/var/opt/pmmc/pte/cache
TEMP=`mktemp -d ${MKTEMP_OPTS} pai-unpack-XXXXXX`

exit_with_error() {
    echo "PAI data is NOT installed."
    db_fset pai-installer/httpget seen false
    db_set pai-installer/httpget false
    exit 1
}

download_and_unpack() {
    if [ -d "${CACHE_DIR}" -a -f "${CACHE_DIR}"/${FILENAME} ]
    then
        echo "Installing from local file ${CACHE_DIR}/${FILENAME}"
    else # no local file
        db_get pai-installer/httpget

        if [ "${RET}" != "true" ]
        then
            exit_with_error "download or license refused"
        fi

        pai_download ${CACHE_DIR} || exit_with_error
    fi # end if local file

    pai_unpack ${CACHE_DIR} ${1} || exit_with_error
}

install_data() {
    DATA_ORIG=${1}/usr/share/PTE-PMMC/pai
    DATA_DEST=/opt/pmmc/pte/pai
    pai_install_data ${DATA_ORIG} ${DATA_DEST}
}

prepatch_data() {
    DATA_DEST=/opt/pmmc/pte/pai
    PAI_TEMP_DIR=`mktemp -d ${MKTEMP_OPTS} pai-patchset-XXXXXX`
    echo "Fetching patches from GitHub..."
    (cd ${PAI_TEMP_DIR}
    git clone ${GIT_PROTOCOL}://github.com/oiteam/pmmc-pte-pai-patchset.git
    cp -r pmmc-pte-pai-patchset/patches ${DATA_DEST})
    rm -rf ${PAI_TEMP_DIR}
}

patch_data() {
    DATA_DEST=/opt/pmmc/pte/pai
    PATCH_DIR=${DATA_DEST}/patches
    pai_patch_data ${DATA_DEST} ${PATCH_DIR}
}

case "${1}" in
    configure)
        (download_and_unpack ${TEMP}
        install_data ${TEMP}
        prepatch_data
        patch_data
        rm -rf ${TEMP}) && echo "PAI data installed."
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`${1}'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
